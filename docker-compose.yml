version: '3.9'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: payment-app
    ports:
      - "8080:8080"
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://mongo:27017/payments_db
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      SPRING_PROFILES_ACTIVE: docker
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - app-network

  mongo:
    image: mongo:6.0
    container_name: mongodb_docker
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    environment:
      MONGO_INITDB_DATABASE: payments_db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/payments_db --quiet
      interval: 20s
      retries: 10
      start_period: 40s
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq_docker
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      retries: 10
      start_period: 60s
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    restart: always
    volumes:
      - redis_data:/data
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      retries: 5
      start_period: 10s

volumes:
  mongo_data:
  redis_data:

networks:
  app-network:
    driver: bridge